"use strict";(self.webpackChunkitt_accessibility_handbook=self.webpackChunkitt_accessibility_handbook||[]).push([[5091],{684:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"developer/semantics/lists","title":"lists","description":"Lists!SECTION","source":"@site/docs/developer/semantics/lists.md","sourceDirName":"developer/semantics","slug":"/developer/semantics/lists","permalink":"/docs/developer/semantics/lists","draft":false,"unlisted":false,"editUrl":"https://github.com/NovaObrien11/itt-accessability-hand-book/docs/developer/semantics/lists.md","tags":[],"version":"current","frontMatter":{},"sidebar":"developerSidebar","previous":{"title":"Inputs","permalink":"/docs/developer/semantics/inputs"},"next":{"title":"Understandable","permalink":"/docs/category/understandable"}}');var i=t(4848),r=t(8453);const o={},l=void 0,d={},c=[{value:"Guidelines for Using Lists",id:"guidelines-for-using-lists",level:2}];function a(e){const s={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Lists"}),"!SECTION\nLists are used to present information in a structured format, making it easier for users to read and understand. They can be used for various purposes, such as enumerating items, providing instructions, or summarizing key points."]}),"\n",(0,i.jsx)(s.h2,{id:"guidelines-for-using-lists",children:"Guidelines for Using Lists"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Use Lists for Grouping Related Items"}),": Use lists to group related items together. This helps users quickly identify and understand the relationships between different pieces of information."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Use Appropriate List Types"}),": Choose the appropriate list type based on the content:"]}),"\n"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"<ul>"})," for unordered lists (bulleted lists) when the order of items does not matter."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"<ol>"})," for ordered lists (numbered lists) when the order of items is important."]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>l});var n=t(6540);const i={},r=n.createContext(i);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);